name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      role-assume:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      ECR_MONGO_REPO:
        required: true
        type: string
      ECR_REDIS_REPO:
        required: true
        type: string
      ECR_BACKEND_REPO:
        required: true
        type: string
      ECR_FRONTEND_REPO:
        required: true
        type: string
      runner:
        required: false
        type: string
        default: "ubuntu-latest"

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  build-and-push:
    name: "BUILD"
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role-assume }}
          role-session-name: actionssession
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push mongo image
        id: build-mongo
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPO: ${{ inputs.ECR_MONGO_REPO }}
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t "$ECR_REGISTRY/$ECR_REPO:$TAG" -f database/Dockerfile database/
          docker push "$ECR_REGISTRY/$ECR_REPO:$TAG"
          echo "mongo_tag=$TAG" >> $GITHUB_OUTPUT
    # outputs:
    #   mongo_tag: ${{ steps.build-mongo.outputs.mongo_tag }}

      - name: Build and push redis image
        id: build-redis
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPO: ${{ inputs.ECR_REDIS_REPO }}
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t "$ECR_REGISTRY/$ECR_REPO:$TAG" -f redis/Dockerfile .
          docker push "$ECR_REGISTRY/$ECR_REPO:$TAG"
          echo "redis_tag=$TAG" >> $GITHUB_OUTPUT
    # outputs:
    #   redis_tag: ${{ steps.build-redis.outputs.redis_tag }}

      - name: Build and push backend image
        id: build-backend
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPO: ${{ inputs.ECR_BACKEND_REPO }}
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t "$ECR_REGISTRY/$ECR_REPO:$TAG" -f backend/Dockerfile backend/
          docker push "$ECR_REGISTRY/$ECR_REPO:$TAG"
          echo "backend_tag=$TAG" >> $GITHUB_OUTPUT
    # outputs:
    #   backend_tag: ${{ steps.build-backend.outputs.backend_tag }}

      - name: Build and push frontend image
        id: build-frontend
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPO: ${{ inputs.ECR_FRONTEND_REPO }}
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t "$ECR_REGISTRY/$ECR_REPO:$TAG" -f frontend/Dockerfile frontend/
          docker push "$ECR_REGISTRY/$ECR_REPO:$TAG"
          echo "frontend_tag=$TAG" >> $GITHUB_OUTPUT
    # outputs:
    #   frontend_tag: ${{ steps.build-frontend.outputs.frontend_tag }}
